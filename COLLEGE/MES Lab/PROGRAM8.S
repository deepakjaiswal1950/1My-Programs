;WRITE AN ALP TO FIND THE NUMBER OF 1'S AND 0'S IN TWO CONSECUTIVE MEMORY LOCATIONS

	      AREA PROGRAM , CODE, READONLY	    ; PROGRAM PREREQUISITES IN READONLY MEMORY
		  ENTRY								; BEGINNING OF PROGRAM

		  LDR R1, = VALUE1  				; LOADS THE ADDRESS OF FIRST VALUE 
		  LDR R2, [R1]						; LOAD CONTENT OF VALUE1 INTO R2
          LDR R3, = 0						; INITIALISE DUMMY REGISTER 
          LDR R4, = 0 						; INITIALISE DUMMY REGISTER 
	      LDR R5, = 32						; SIZE OF MEMORY BLOCK
	
LOOPNUM1  MOVS R2, R2, LSR #1				; LOGICAL SHIFT RIGHT 
		  ADDCS R3, R3, #1					; R3 TO COUNT NUMBER OF 1'S (ONLY IF CARRY IS SET HIGH)
	      ADDCC R4,#1 						; R4 TO COUNT OF NUMBER OF 0'S (ONLY IF CARRY IS SET LOW)
	      SUBS R5, R5, #1					; DECREMENT SIZE OF MEMORY BLOCK BY 1
	      BNE LOOPNUM1						; LOOK BACK TILL R2 BECOME 0
		
		  LDR R1, = VALUE2  				; LOADS THE ADDRESS OF SECOND VALUE 
		  LDR R2, [R1]						; LOAD CONTENT OF VALUE2 INTO R2
	      LDR R5, = 32						; SIZE OF MEMORY BLOCK

LOOPNUM2  MOVS R2, R2, LSR #1				; LOGICAL SHIFT RIGHT 
		  ADDCS R3, R3, #1					; ADD IF CARRY IS SET TO R3 TO COUNT NUMBER OF 1'S
	      ADDCC R4,#1 						; ADD IF CARRY IS NOT SET TO R4 TO COUNT OF NUMBER OF 0'S
	      SUBS R5, R5, #1					; DECREMENT SIZE OF MEMORY BLOCK BY 1
	      BNE LOOPNUM2						; LOOK BACK TILL R2 BECOME 0 

STOP B STOP									; STOP B STOP
		
		AREA WRITEDATA, DATA, READWRITE
VALUE1 DCD 0X40000000						; GIVEN NUMBER1 IN 32 BIT MEMORY
VALUE2 DCD 0X40000004						; GIVEN NUMBER2 IN 32 BIT MEMORY
	END 									; END OF PROGRAM
		


