; WRITE AN ALP TO FIND THE LARGEST/SMALLEST IN AN ARRAY OF 32 BIT NUMBERS	
	AREA PROGRAM, CODE, READONLY									; PROGRAM PREREQUISITES IN READ ONLY MEMORY
	ENTRY															; BEGINNING OF PROGRAM
	
	LDR R0, = ARRAY													; LOAD ADDRESS OF "ARRRAY" INTO R0
	LDR R1, = ARRAYSIZE												; LOAD ADDRESS OF "ARRAYSIZE" INTO R1
	LDR R2, [R1]													; LOAD CONTENT OF "ARRAYSIZE" INTO R2
	LDR R3, [R0]													; INITIALIZE R3 WITH FIRST CONTENT OF "ARRAY" FOR FINDING GREATEST NUMBER IN "ARRAY"
	LDR R4, [R0]													; INITIALIZE R4 WITH FIRST CONTENT OF "ARRAY" FOR FINDING LOWEST NUMBER IN "ARRAY"

LOOP LDR R5, [R0], #4												; LOAD THE ITERABLE CONTENT OF "ARRAY" INTO R5
	 CMP R5, R3														; CHECK IF R5 IS GREATER THAN R3
	 MOVGT R3, R5													; IF R5 IS GREATER THAN R3, THEN UPDATE R3 WITH R5	
	 CMP R5, R4														; CHECK IF R5 IS LESSER THAN R4
	 MOVLT R4, R5													; IF R5 IS LESS THAN R3, THEN UPDATE R4 WITH R5	
	 SUBS R2, #1													; DECREASE "ARRAYSIZE" BY 1
	 CMP R2, #0														; CHECK IF ARRAY SIZE IS 0
	 BEQ STORE														; BRANCH TO LABEL "STORE" IF "ARRAYSIZE" IS 0
	 BNE LOOP														; BRANCH TO "LOOP" UNTIL ZERO FLAG IS SET HIGH
	 
STORE LDR R6, = LARGEADDRESS										; LOAD ADDRESS OF "LARGEADDRESS" INTO R6
	  STR R3, [R6] 													; STORE CONTENT OF R3 INTO MEMORY LOCATION POINTED BY R6
	  LDR R7, = SMALLADDRESS										; LOAD ADDRESS OF "SMALLADDRESS" INTO R7
	  STR R4, [R7]													; STORE CONTENT OF R4 INTO MEMORY LOCATION POINTED BY R7
STOP B STOP															; INFINITE LOOP

ARRAY DCD 11, 5, 2, 7, 77, 23, 56, 100, 44, 1, 25					; DEFINING ARRAY 
ARRAYSIZE DCD 11													; SIZE OF ARRAY
	
	AREA WRITEDATA, DATA, READWRITE									; PROGRAM PREREQUISITES IN READ WRITE MEMORY
LARGEADDRESS DCD 0X40000000											; ADDRESS OF LOCATION CONTAINING THE MAXIMUM ELEMENT IN ARRAY
SMALLADDRESS DCD 0X40000004											; ADDRESS OF LOCATION CONTAINING THE LEAST ELEMENT IN ARRAY
	END																; END OF PROGRAM